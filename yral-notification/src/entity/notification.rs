//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.13

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "notification")]
pub struct Model {
    pub user_principal: String,
    #[sea_orm(primary_key)]
    pub id: i32,
    pub read: bool,
    pub timestamp: DateTime,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_one = "super::notification_liked_payload::Entity")]
    NotificationLikedPayload,
    #[sea_orm(has_one = "super::notification_video_upload_payload::Entity")]
    NotificationVideoUploadPayload,
}

impl Related<super::notification_liked_payload::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::NotificationLikedPayload.def()
    }
}

impl Related<super::notification_video_upload_payload::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::NotificationVideoUploadPayload.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
